var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { HammerGestureConfig } from '@angular/platform-browser';
import * as Hammer from 'hammerjs';
let IonicSwipeAll = class IonicSwipeAll extends HammerGestureConfig {
    constructor(elem) {
        super();
        this.elem = elem;
        this.swipe = new EventEmitter();
        this.swipeup = new EventEmitter();
        this.swipedown = new EventEmitter();
        this.hammer = Hammer;
    }
    ngOnInit() {
        const instance = new Hammer(this.elem.nativeElement);
        instance.get('swipe').set({ direction: this.hammer.DIRECTION_VERTICAL });
        instance.on('swipe', event => this.swipe.emit(event));
        instance.on('swipeup', event => this.swipeup.emit(event));
        instance.on('swipedown', event => this.swipedown.emit(event));
    }
};
__decorate([
    Output(),
    __metadata("design:type", Object)
], IonicSwipeAll.prototype, "swipe", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], IonicSwipeAll.prototype, "swipeup", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], IonicSwipeAll.prototype, "swipedown", void 0);
IonicSwipeAll = __decorate([
    Directive({
        selector: '[swipeAll]',
    }),
    __metadata("design:paramtypes", [ElementRef])
], IonicSwipeAll);
export { IonicSwipeAll };
//# sourceMappingURL=ionic.swipe.all.js.map